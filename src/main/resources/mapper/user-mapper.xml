<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--写对应mapper的全限定名，不然不知道与哪个mapper对应-->
<!--id与对应mapper中的方法的名称对应-->
<!-- #{}表示要引用对应方法的参数-->
<mapper namespace="com.nowcoder.community.dao.UserMapper">
    <sql id="insertFields">
        username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>
    <select id="selectById" resultType="User">
        select id,username,password,salt,email,type,status,activation_code,header_url,create_time
        from user
        where id = #{id}
    </select>

    <select id="selectByName" resultType="User">
        select id,username,password,salt,email,type,status,activation_code,header_url,create_time
        from user
        where username = #{username}
    </select>

    <select id="selectByEmail" resultType="User">
        select id,username,password,salt,email,type,status,activation_code,header_url,create_time
        from user
        where email = #{email}
    </select>

    <!--    parameterType为增加的参数类型（基本参数类型就不用声明），-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values(#{username},#{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime})
    </insert>

    <update id="updateStatus">
        update user set status = #{status} where id = #{id};
    </update>

    <update id="updateHeader">
        update user set headerUrl = #{headerUrl} where id = #{id};
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id};
    </update>
</mapper>